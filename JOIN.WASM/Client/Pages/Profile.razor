@page "/profile"
@using JOIN.WASM.Client.ViewModels
@using JOIN.WASM.Shared.Models
@using System.Security.Claims
@inject IProfileViewModel _profileViewModel
@inject NavigationManager _navigationManager


@*AutenticaionStateInjection*@
@*@inject AuthenticationStateProvider _authenticationStateProvider*@

<div class="col-12">
    <input type="text" @bind-value="_profileViewModel.FirstName" class="form-control" placeholder="first name">
    <br/>
    <input type="text" @bind-value="_profileViewModel.LastName" class="form-control" placeholder="last name">
    <br/>
    <input type="text" @bind-value="_profileViewModel.EmailAddress" class="form-control" placeholder="email address">
    <br/>
    <textarea class="form-control" @bind="_profileViewModel.AboutMe" placeholder="about me"></textarea>
    <br/>
    <button class="btn btn-primary" @onclick="_profileViewModel.UpdateProfile">Update Profile</button>
    <span>&nbsp;&nbsp;</span>@_profileViewModel.Message
</div>


@code {

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {

        //Using AutenticationState
        var authState = await authenticationState;

        //AutenticationStateInjection
        //var authState = await _authenticationStateProvider.GetAuthenticationStateAsync(); 


        var user = authState.User;
        
        if(user.Identity.IsAuthenticated)
        {
            var claim = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier);
            _profileViewModel.UserId = Convert.ToInt64(claim?.Value) ;
            await _profileViewModel.GetProfile();
        }
        else
        {
            _navigationManager.NavigateTo("/");
        }

    }

}

@*@code {

    private ProfileViewModel _profileViewModel = new ProfileViewModel();

    //private async Task UpdateProfile()
    //{
    //    User user = _profileViewModel;
    //    await HttpClient.PutAsJsonAsync("user/updateprofile/10",user);
    //    _profileViewModel.Message = "Profile updated successfully";
    //}

    //private async Task GetProfile()
    //{
    //    User user = await HttpClient.GetFromJsonAsync<User>("user/getprofile/10");
    //    _profileViewModel = user;
    //    _profileViewModel.Message = "Profile loaded successfully";
    //}

}*@
